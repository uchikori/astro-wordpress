---
import BlockRendererChildren from "./BlockRenderer.astro";
import { getBlockStyling } from "@wp-block-tools/styles";
import type { Block } from "@wp-block-tools/styles";
import { Image } from "astro:assets";
import Navigation from "./Navigation.astro";
import NavigationLink from "./NavigationLink.astro";
import NavigationSubmenu from "./NavigationSubmenu.astro";
import Cover from "./Cover.astro";
import Heading from "./Heading.astro";
import Button from "./Button.astro";
type Props = {
  blocks: Block[];
};
const { blocks } = Astro.props;
---

{
  blocks.map((block) => {
    const { styles, classes } = getBlockStyling(block);

    switch (block.name) {
      case "core/button":
        return <Button styles={styles} classes={classes} content={block.attributes?.content || ""} url={block.attributes?.url || ""} />;
      case "core/heading":
        return <Heading level={block.attributes?.level || 2} classes={classes} styles={styles} content={block.attributes?.content || ""} />;
      case "core/cover":
        return (
          <Cover classes={classes} styles={styles} url={block.attributes?.url} width={block.attributes?.width} height={block.attributes?.height}>
            <BlockRendererChildren blocks={block.innerBlocks || []} />
          </Cover>
        );
      case "core/navigation-submenu":
        return (
          <NavigationSubmenu styles={styles} classes={classes} label={block.attributes?.label || ""} url={block.attributes?.url || ""}>
            <BlockRendererChildren blocks={block.innerBlocks || []} />
          </NavigationSubmenu>
        );
      case "core/navigation-link":
        return <NavigationLink styles={styles} classes={classes} label={block.attributes?.label || ""} url={block.attributes?.url || ""} />;
      case "core/navigation":
        return (
          <Navigation classes={classes} styles={styles}>
            <BlockRendererChildren blocks={block.innerBlocks || []} />
          </Navigation>
        );
      case "core/paragraph":
        return <p class={classes} style={styles} set:html={block.attributes?.content} />;
      case "core/columns":
      case "core/column":
      case "core/post-content":
      case "core/group":
      case "core/buttons":
        return (
          <div class={classes} style={styles}>
            <BlockRendererChildren blocks={block.innerBlocks || []} />
          </div>
        );
      case "core/site-logo":
        return (
          <div class={classes} style={styles}>
            <Image src={block.attributes?.url || ""} width={block.attributes?.width || "50"} height={block.attributes?.width || "50"} alt={block.attributes?.alt} />
          </div>
        );
      case "core/template-part":
        return <BlockRendererChildren blocks={block.innerBlocks || []} />;
      default:
        return null;
    }
  })
}
